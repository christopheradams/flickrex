{
  "stat": "ok",
  "method": {
    "requiredperms": 0,
    "needssigning": 0,
    "needslogin": 0,
    "name": "flickr.photos.getPopular",
    "description": {
      "_content": "Returns a list of popular photos"
    }
  },
  "errors": {
    "error": [
      {
        "message": "Invalid user id",
        "code": "1",
        "_content": "An invalid NSID was passed"
      },
      {
        "message": "Invalid API Key",
        "code": 100,
        "_content": "The API key passed was not valid or has expired."
      },
      {
        "message": "Service currently unavailable",
        "code": 105,
        "_content": "The requested service is temporarily unavailable."
      },
      {
        "message": "Write operation failed",
        "code": 106,
        "_content": "The requested operation failed due to a temporary issue."
      },
      {
        "message": "Format \"xxx\" not found",
        "code": 111,
        "_content": "The requested response format was not found."
      },
      {
        "message": "Method \"xxx\" not found",
        "code": 112,
        "_content": "The requested method was not found."
      },
      {
        "message": "Invalid SOAP envelope",
        "code": 114,
        "_content": "The SOAP envelope send in the request could not be parsed."
      },
      {
        "message": "Invalid XML-RPC Method Call",
        "code": 115,
        "_content": "The XML-RPC request document could not be parsed."
      },
      {
        "message": "Bad URL found",
        "code": 116,
        "_content": "One or more arguments contained a URL that has been used for abuse on Flickr."
      }
    ]
  },
  "arguments": {
    "argument": [
      {
        "optional": 0,
        "name": "api_key",
        "_content": "Your API application key. <a href=\"/services/api/misc.api_keys.html\">See here</a> for more details."
      },
      {
        "optional": "1",
        "name": "user_id",
        "_content": "The NSID of the user to get a galleries list for. If none is specified, the calling user is assumed."
      },
      {
        "optional": "1",
        "name": "sort",
        "_content": "The sort order. One of <code>faves</code>, <code>views</code>, <code>comments</code> or <code>interesting</code>. Deafults to <code>interesting</code>."
      },
      {
        "optional": 1,
        "name": "extras",
        "_content": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: <code>description</code>, <code>license</code>, <code>date_upload</code>, <code>date_taken</code>, <code>owner_name</code>, <code>icon_server</code>, <code>original_format</code>, <code>last_update</code>, <code>geo</code>, <code>tags</code>, <code>machine_tags</code>, <code>o_dims</code>, <code>views</code>, <code>media</code>, <code>path_alias</code>, <code>url_sq</code>, <code>url_t</code>, <code>url_s</code>, <code>url_q</code>, <code>url_m</code>, <code>url_n</code>, <code>url_z</code>, <code>url_c</code>, <code>url_l</code>, <code>url_o</code>"
      },
      {
        "optional": 1,
        "name": "per_page",
        "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500."
      },
      {
        "optional": 1,
        "name": "page",
        "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
      }
    ]
  }
}
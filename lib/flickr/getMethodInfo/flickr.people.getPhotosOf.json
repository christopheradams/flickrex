{
  "stat": "ok",
  "method": {
    "response": {
      "_content": "<photos page=\"2\" has_next_page=\"1\" perpage=\"10\">\n\t<photo id=\"2636\" owner=\"47058503995@N01\" \n\t\tsecret=\"a123456\" server=\"2\" title=\"test_04\"\n\t\tispublic=\"1\" isfriend=\"0\" isfamily=\"0\" />\n\t<photo id=\"2635\" owner=\"47058503995@N01\"\n\t\tsecret=\"b123456\" server=\"2\" title=\"test_03\"\n\t\tispublic=\"0\" isfriend=\"1\" isfamily=\"1\" />\n\t<photo id=\"2633\" owner=\"47058503995@N01\"\n\t\tsecret=\"c123456\" server=\"2\" title=\"test_01\"\n\t\tispublic=\"1\" isfriend=\"0\" isfamily=\"0\" />\n\t<photo id=\"2610\" owner=\"12037949754@N01\"\n\t\tsecret=\"d123456\" server=\"2\" title=\"00_tall\"\n\t\tispublic=\"1\" isfriend=\"0\" isfamily=\"0\" />\n</photos>"
    },
    "requiredperms": 0,
    "needssigning": 0,
    "needslogin": 0,
    "name": "flickr.people.getPhotosOf",
    "explanation": {
      "_content": "<p>This method returns a variant of the standard photo list xml.</p>\n\n<p>For queries about a member other than the currently authenticated one, pagination data (\"total\" and \"pages\" attributes) will not be available.</p>\n\n<p>Instead, the <photos> element will contain a boolean value 'has_next_page' which will tell you whether or not there are more photos to fetch.</p>"
    },
    "description": {
      "_content": "Returns a list of photos containing a particular Flickr member."
    }
  },
  "errors": {
    "error": [
      {
        "message": "User not found.",
        "code": "1",
        "_content": "A user_id was passed which did not match a valid flickr user."
      },
      {
        "message": "Invalid API Key",
        "code": 100,
        "_content": "The API key passed was not valid or has expired."
      },
      {
        "message": "Service currently unavailable",
        "code": 105,
        "_content": "The requested service is temporarily unavailable."
      },
      {
        "message": "Write operation failed",
        "code": 106,
        "_content": "The requested operation failed due to a temporary issue."
      },
      {
        "message": "Format \"xxx\" not found",
        "code": 111,
        "_content": "The requested response format was not found."
      },
      {
        "message": "Method \"xxx\" not found",
        "code": 112,
        "_content": "The requested method was not found."
      },
      {
        "message": "Invalid SOAP envelope",
        "code": 114,
        "_content": "The SOAP envelope send in the request could not be parsed."
      },
      {
        "message": "Invalid XML-RPC Method Call",
        "code": 115,
        "_content": "The XML-RPC request document could not be parsed."
      },
      {
        "message": "Bad URL found",
        "code": 116,
        "_content": "One or more arguments contained a URL that has been used for abuse on Flickr."
      }
    ]
  },
  "arguments": {
    "argument": [
      {
        "optional": 0,
        "name": "api_key",
        "_content": "Your API application key. <a href=\"/services/api/misc.api_keys.html\">See here</a> for more details."
      },
      {
        "optional": "0",
        "name": "user_id",
        "_content": "The NSID of the user you want to find photos of. A value of \"me\" will search against photos of the calling user, for authenticated calls."
      },
      {
        "optional": "1",
        "name": "owner_id",
        "_content": "An NSID of a Flickr member. This will restrict the list of photos to those taken by that member."
      },
      {
        "optional": 1,
        "name": "extras",
        "_content": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: <code>description</code>, <code>license</code>, <code>date_upload</code>, <code>date_taken</code>, <code>date_person_added</code>, <code>owner_name</code>, <code>icon_server</code>, <code>original_format</code>, <code>last_update</code>, <code>geo</code>, <code>tags</code>, <code>machine_tags</code>, <code>o_dims</code>, <code>views</code>, <code>media</code>, <code>path_alias</code>, <code>url_sq</code>, <code>url_t</code>, <code>url_s</code>, <code>url_q</code>, <code>url_m</code>, <code>url_n</code>, <code>url_z</code>, <code>url_c</code>, <code>url_l</code>, <code>url_o</code>"
      },
      {
        "optional": 1,
        "name": "per_page",
        "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500."
      },
      {
        "optional": 1,
        "name": "page",
        "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
      }
    ]
  }
}